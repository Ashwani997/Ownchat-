<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
      referrerpolicy="no-referrer"
    />
    <title>Gemini AI Chat</title>
    <style>
      * {
        padding: 0;
        margin: auto;
        box-sizing: border-box;
        color: azure;
      }
      h1 {
        text-align: center;
        padding: 30px 0;
        color: blanchedalmond;
      }
      body {
        background-image: url("../Images/image.jpg");
        padding: 0 70px;
      }
      form {
        position: relative;
      }
      .form-wrapper {
        position: fixed;
        bottom: 0;
        margin-bottom: 30px;
        width: 90%;
      }
      input {
        background-color: black;
        border: none;
        padding: 1rem;
        width: 100%;
        border-radius: 10px;
      }
      button {
        position: absolute;
        right: 5px;
        top: 5px;
        padding: 0.6rem;
        border: none;
        border-radius: 22px;
      }
      button > i {
        color: #2f2f2f !important;
        font-size: large;
      }
      .question {
        background-color: black;
        padding: 10px;
        margin: 0 0 15px 0;
        border-radius: 5px;
      }
      .answer {
        text-align: justify;
        padding: 0 10px;
        margin-bottom: 15px;
      }
      #conversationList {
        max-height: 500px;
        overflow: overlay;
        width: 100%;
        overflow-y: auto;
        margin-bottom: 25px;
        padding: 0 10px;
      }
      #conversationList::-webkit-scrollbar {
        width: 10px;
        background-color: #f5f5f5;
      }

      #conversationList::-webkit-scrollbar-thumb {
        border-radius: 10px;
        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
        background-color: #2e2e2e;
      }
      #conversationList::-webkit-scrollbar-track {
        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
        border-radius: 10px;
        background-color: #f5f5f5;
      }
      .block{
       color: #70aaff;
       font-size: 44px;
       float: left;
        margin-top: -6px;
}
.dive{
  color:#20dac5;
}
.logout{
  color: brown;
    background-color: bisque;
    margin: 26px;
}
    </style>
  </head>
  <body>
    <a href='/login'> 
      <button class="logout"> 
         Logout
      </button> 
  </a>
    <div class="head"><h1 class="block">CHAT<span class="dive">BOT</span></h1>
    </div>
    <h1>Welcome to AI Chat</h1>


    <div id="conversationList">
      <% conversation.forEach(item => { %>
      <div class="question"><strong>Q:</strong> <%= item.question %></div>
      <div class="answer"><strong>A:</strong> <%= item.answer %></div>
      <% }) %>
    </div>
    <form id="chatForm">
      <div class="form-wrapper">
        <input
          type="text"
          id="question"
          name="question"
          placeholder="Ask a question"
          required
        />
        <button type="submit"id="scroll-to-top">
          <i class="fa-solid fa-circle-arrow-up"></i>
        </button>
      </div>
    </form>

    <script>
      document
        .getElementById('chatForm')
        .addEventListener('submit', async function (event) {
          event.preventDefault();
          const question = document.getElementById('question').value;

          // Add the question to the conversation list immediately
          const conversationList = document.getElementById('conversationList');

          const questionSubmit = document.createElement('div');
          const answer = document.createElement('div');
          questionSubmit.classList = `question`;
          questionSubmit.innerHTML = `<strong>Q:</strong> ${question}`;
          answer.classList = `answer`;
          answer.innerHTML = `<span class="answer">Processing...</span>`;
          conversationList.appendChild(questionSubmit);
          conversationList.appendChild(answer);

          // Clear the input field
          document.getElementById('question').value = '';

          const response = await fetch('/dashboard', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ question }),
          });
          //console.log('conversation', response);
          if (response.ok) {
            const result = await response.json();
            updateConversation(result.conversation);
          } else {
            console.error('Error submitting the form');
            // Update the processing state to indicate an error
            answer.querySelector('.answer').innerText =
              'Error generating response';
          }
        });

      function updateConversation(conversation) {
        const conversationList = document.getElementById('conversationList');
        conversationList.innerHTML = '';
        conversation.forEach((item) => {
          const question = document.createElement('div');
          const answer = document.createElement('div');
          question.classList = `question`;
          question.innerHTML = `<strong>Q:</strong> ${item.question}`;
          answer.classList = `answer`;
          answer.innerHTML = `<strong>A:</strong> ${item.answer}`;
          conversationList.appendChild(question);
          conversationList.appendChild(answer);
        });
      }
      const scrollBtn = document.querySelector("#scroll-to-top");

         window.addEventListener("scroll", () => {
         if (window.pageYOffset > 20) {
          scrollBtn.style.display = "block";
          } else {
         scrollBtn.style.display = "none";
         }
        });

       scrollBtn.addEventListener("click", () => {
        window.scrollTo({
         top: 0,
         behavior: "smooth"
          });})
    </script>
  </body>
</html>
